<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>BilboLeft</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//determines where to stack plates and where to put new hitbox
leftPos=10
//determines where to stack garbage and where to put new hitbox
rightPos=10
//speed for alarm
global.alarm_speed=room_speed*1.6
//sets alarm for spawning stuff
alarm[0]=global.alarm_speed

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//win condition
if(global.leftScore+global.rightScore&lt;7&amp;&amp;global.hits&gt;0){
//decides what kind of object to spawn
randal=irandom(2)
if(randal==0){rand=obj_garbage1a}
else{rand=obj_plate1a}

//decides where to spawn and spawns
location=irandom(4)
if(location==0)
    instance_create(88,-4,rand)
else if(location==1)
    instance_create(108,-4,rand)
else if(location==2)
    instance_create(128,-4,rand)
else if(location==3)
    instance_create(148,-4,rand)
else if(location==4)
    instance_create(168,-4,rand)
    
//resets alarm
alarm[0]=global.alarm_speed
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.hits&gt;0){
//move right
if(keyboard_check(vk_right) &amp;&amp; x&lt;226-global.bilbospeed){
    x+=global.bilbospeed
    sprite_index=BilboRight
}
//move left
if(keyboard_check(vk_left) &amp;&amp; x&gt;30+global.bilbospeed){
    x-=global.bilbospeed
    sprite_index=BilboLeft
}
//fixes positions if less than 10
if(leftPos&lt;10)leftPos=10
if(rightPos&lt;10)rightPos=10
//plate collision for left hand
leftHand = collision_rectangle(x-16, y-leftPos+3, x-10, y-leftPos, obj_plate1a, false,false)
if(leftHand!=noone){
    if(leftPos&lt;=30){
        with(leftHand)instance_destroy()
        instance_create(x-13,y-leftPos,obj_plate1L)
        leftPos+=2
    } else {
        leftPos-=(2*5)
        global.hits--
    }
}
//garbage collision for left hand
leftHand = collision_rectangle(x-16, y-leftPos+3, x-10, y-leftPos, obj_garbage1a, false,false)
if(leftHand!=noone){
    with(leftHand)instance_destroy()
    leftPos-=(2*5)
    global.hits--
}
//plate right
rightHand = collision_rectangle(x+10, y-rightPos+3, x+16, y-rightPos, obj_plate1a, false,false)
if(rightHand!=noone){
    if(rightPos&lt;=30){
        with(rightHand)instance_destroy()
        instance_create(x+13,y-rightPos,obj_plate1R)
        rightPos+=2
    } else {
        rightPos-=(2*5)
        global.hits--
    }
}
//garbage right
rightHand = collision_rectangle(x+10, y-rightPos+3, x+16, y-rightPos, obj_garbage1a, false,false)
if(rightHand!=noone){
    with(rightHand)instance_destroy()
    rightPos-=(2*5)
    global.hits--
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
